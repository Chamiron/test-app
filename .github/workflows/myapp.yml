name: 'Build and Push Docker Image'

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend-app:latest,${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ github.sha }}

  deploy-to-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    concurrency:
      group: production_environment
      cancel-in-progress: false
    env:
      DEPLOY_PATH: /var/www/myapp

    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          config: |
            Host production
              HostName ${{ secrets.PRODUCTION_HOST }}
              User ${{ secrets.PRODUCTION_USER }}
              IdentityFile ~/.ssh/id_rsa
              StrictHostKeyChecking no

      - name: Fix SSH key permissions
        run: chmod 600 ~/.ssh/id_rsa

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup Remote Directory
        run: |
          ssh production "sudo mkdir -p ${DEPLOY_PATH}/config && sudo chown $USER:$USER ${DEPLOY_PATH}/config"
          ssh production "sudo mkdir -p ${DEPLOY_PATH}/data && sudo chown $USER:$USER ${DEPLOY_PATH}/data"

      - name: Copy Configuration Files
        run: |
          [ -f .env ] && scp -i ~/.ssh/id_rsa .env production:${DEPLOY_PATH}/.env || echo ".env file not found"
          [ -f docker-compose.yaml ] && scp -i ~/.ssh/id_rsa docker-compose.yaml production:${DEPLOY_PATH}/docker-compose.yaml || echo "docker-compose.yaml not found"
          [ -d ./config ] && scp -r -i ~/.ssh/id_rsa ./config/* production:${DEPLOY_PATH}/config/ || echo "./config directory not found"
